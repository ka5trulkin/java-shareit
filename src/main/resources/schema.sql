DROP TABLE IF EXISTS users, items, requests, bookings, comments CASCADE;

CREATE TABLE IF NOT EXISTS public.users (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	"name" varchar(70) NOT NULL,
	email varchar(70) NOT NULL,
	CONSTRAINT email_unique UNIQUE (email),
	CONSTRAINT user_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.items (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	owner_id bigint NOT NULL,
	"name" varchar(70) NOT NULL,
	description varchar(300) NOT NULL,
	is_available bool NULL,
	CONSTRAINT item_pk PRIMARY KEY (id),
	CONSTRAINT item_fk FOREIGN KEY (owner_id) REFERENCES public.users(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.bookings (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	starting timestamp NOT NULL,
	ending timestamp NOT NULL,
	booker_id bigint NOT NULL,
	item_id bigint NOT NULL,
	status smallint NOT NULL,
	CONSTRAINT booking_pk PRIMARY KEY (id),
	CONSTRAINT bookings_owner_fk FOREIGN KEY (booker_id) REFERENCES public.users(id) ON DELETE RESTRICT ON UPDATE restrict,
	CONSTRAINT bookings_item_fk FOREIGN KEY (item_id) REFERENCES public.items(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS public.comments (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	author_id bigint NOT NULL,
	item_id bigint NOT NULL,
	comment_text varchar(300) NOT NULL,
	created timestamp NOT NULL,
	CONSTRAINT comments_pk PRIMARY KEY (id),
	CONSTRAINT comment_owner_fk FOREIGN KEY (author_id) REFERENCES public.users(id) ON DELETE RESTRICT ON UPDATE restrict,
	CONSTRAINT item_fk FOREIGN KEY (item_id) REFERENCES public.items(id) ON DELETE RESTRICT ON UPDATE RESTRICT
);